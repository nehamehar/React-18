****passing props undr props 


***libraries of CAPI:
Redux : data is passing with organized mode
react-Redux
redux-toolkit(RTK)
ZUSTAND

mostly work with Redux

***almost every project of react state menagement IF dealing with server or API***

1) we have to create context first
2) after context make we will export context
3) context is like <div> <context>
4) <context>
<h1>   // now the component under context get access of global usercontext.
<p1> 
</context>
THIS IS WE CAN SAY CONTEXT IS MAKE LIKE THIS / OR WE CAN SAY PROVIDER after the <>

***PROVIDER***
- after create Context we use to make provider with  it
***HOW WE CAN MAKE PROVIDER***
<context> -uper 
component // these compo can access all the sate of context
<context> --down 
why provider -- coz it use to provide data


**prop (children)use under (whatever you are getting data pass that we give it name childrean)

const UserContextProvider = ({children}) => {
    const [user,setUser]
    return(  
        <>  \\ here we wrap our context code and passing cmponnent
        {Children}   
        </>
    )

}

HERE WRITING <context> will not work we have to access the value which is provider
<context.provider> 

** which value you want to access through provider
const UserContextProvider = ({children}) => {
    const [user,setUser]
    return(  
        <context.provider value = value {{user, setuser}} >  \\ here we wrap our context code and passing cmponnent
        {Children}   
        </context.provider>
    )

}
whatever data you want to pass you can pass under value also can pass object
through value {{user, setuser}} property we can put component to access 

const UserContextProvider = ({children}) => {
    const [user,setUser]
    return(  
        <context.provider value = value {{user, setuser}} >  \\ here we wrap our context code and passing cmponnent
        {Children}   
        </context.provider>
    )

}

**    const [user,setUser] = React.useState(null)
const UserContextProvider = ({children}) => {
    const [user,setUser] = React.useState(null)
    const [user,setUser]
    return(  
        <context.provider value = value {{user, setuser}} >  \\ here we wrap our context code and passing cmponnent
        {Children}   
        </context.provider>
    )

}

-- here react.usetsate means we are importng usestate from here directly

NOW STORES DONE (FILE)BUT FOR ACCESSING THOSE FILE WE USE  1) TO IMPORT file of provider one IN APP.JSX OR MAIN.JSX
BY:<contextprovider> PUTTING THIS

**FOR FETCHING DATA FROM USERCONTEXT FILE USECONTEXT() USE**


